{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\UploadImage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\UploadImage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\UploadImage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\UploadImage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\UploadImage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\UploadImage\\\\src\\\\components\\\\UploadPhoto\\\\UploadPhoto.js\";\nimport React, { Component } from 'react';\n\nvar UploadPhoto =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadPhoto, _Component);\n\n  function UploadPhoto(props) {\n    var _this;\n\n    _classCallCheck(this, UploadPhoto);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadPhoto).call(this, props));\n    _this.state = {\n      image: null,\n      imagePreviewUrl: null\n    };\n    return _this;\n  }\n\n  _createClass(UploadPhoto, [{\n    key: \"_onChange\",\n    value: function _onChange(e) {\n      var _this2 = this;\n\n      var reader = new FileReader();\n      var image = e.target.files[0];\n\n      reader.onloadend = function () {\n        _this2.setState({\n          image: image,\n          imagePreviewUrl: reader.result,\n          show: false\n        });\n      };\n\n      reader.readAsDataURL(image);\n    }\n  }, {\n    key: \"_uploadInput\",\n    value: function _uploadInput() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: function onChange(e) {\n          return _this3._onChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderImg\",\n    value: function renderImg() {\n      var style = {\n        background: 'url(' + this.state.imagePreviewUrl + ') no-repeat center',\n        'backgroundSize': 'cover'\n      };\n      return React.createElement(\"img\", {\n        src: this.state.imagePreviewUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"_showImg\",\n    value: function _showImg() {\n      if (this.state.imagePreviewUrl) {\n        this.setState({\n          show: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          imagePreviewUrl = _this$state.imagePreviewUrl,\n          show = _this$state.show;\n      return React.createElement(\"div\", {\n        className: \"UploadPhotoContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, imagePreviewUrl && show ? this.renderImg() : this._uploadInput(), React.createElement(\"button\", {\n        className: \"uploadImgBtn\",\n        onClick: function onClick() {\n          return _this4._showImg();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.props.buttonText));\n    }\n  }]);\n\n  return UploadPhoto;\n}(Component);\n\nexport default UploadPhoto;","map":{"version":3,"sources":["C:\\Users\\shalombar\\Desktop\\UploadImage\\src\\components\\UploadPhoto\\UploadPhoto.js"],"names":["React","Component","UploadPhoto","props","state","image","imagePreviewUrl","e","reader","FileReader","target","files","onloadend","setState","result","show","readAsDataURL","_onChange","style","background","renderImg","_uploadInput","_showImg","buttonText"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,eAAe,EAAE;AAAhC,KAAb;AAFe;AAGlB;;;;8BAESC,C,EAAG;AAAA;;AACT,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,UAAIJ,KAAK,GAAGE,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;;AAEAH,MAAAA,MAAM,CAACI,SAAP,GAAmB,YAAM;AACrB,QAAA,MAAI,CAACC,QAAL,CAAc;AACVR,UAAAA,KAAK,EAAEA,KADG;AAEVC,UAAAA,eAAe,EAAEE,MAAM,CAACM,MAFd;AAGVC,UAAAA,IAAI,EAAE;AAHI,SAAd;AAKH,OAND;;AAQAP,MAAAA,MAAM,CAACQ,aAAP,CAAqBX,KAArB;AAEH;;;mCAEc;AAAA;;AACX,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,iBAAO,MAAI,CAACU,SAAL,CAAeV,CAAf,CAAP;AAAA,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAQH;;;gCAEW;AACR,UAAIW,KAAK,GAAG;AACRC,QAAAA,UAAU,EAAE,SAAS,KAAKf,KAAL,CAAWE,eAApB,GAAsC,oBAD1C;AAER,0BAAkB;AAFV,OAAZ;AAIA,aAAQ;AAAK,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;;+BAEU;AACP,UAAI,KAAKF,KAAL,CAAWE,eAAf,EAAgC;AAC5B,aAAKO,QAAL,CAAc;AAAEE,UAAAA,IAAI,EAAE;AAAR,SAAd;AACH;AACJ;;;6BAEQ;AAAA;;AAAA,wBAC2B,KAAKX,KADhC;AAAA,UACCE,eADD,eACCA,eADD;AAAA,UACkBS,IADlB,eACkBA,IADlB;AAGL,aACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,eAAe,IAAIS,IAAnB,GAA0B,KAAKK,SAAL,EAA1B,GAA6C,KAAKC,YAAL,EADlD,EAEI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,EAAN;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkE,KAAKnB,KAAL,CAAWoB,UAA7E,CAFJ,CADJ;AAOH;;;;EAzDqBtB,S;;AA4D1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass UploadPhoto extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { image: null, imagePreviewUrl: null }\r\n    }\r\n\r\n    _onChange(e) {\r\n        let reader = new FileReader();\r\n        let image = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                image: image,\r\n                imagePreviewUrl: reader.result,\r\n                show: false\r\n            });\r\n        }\r\n\r\n        reader.readAsDataURL(image)\r\n\r\n    }\r\n\r\n    _uploadInput() {\r\n        return (\r\n            <div className='button'>\r\n                {/* <label class=\"hand-cursor\"> */}\r\n                <button className=\"btn\"></button>\r\n                <input type='file' onChange={(e) => this._onChange(e)}></input>\r\n                {/* </label> */}\r\n            </div >\r\n        )\r\n    }\r\n\r\n    renderImg() {\r\n        let style = {\r\n            background: 'url(' + this.state.imagePreviewUrl + ') no-repeat center',\r\n            'backgroundSize': 'cover'\r\n        }\r\n        return (<img src={this.state.imagePreviewUrl} ></img>)\r\n    }\r\n\r\n    _showImg() {\r\n        if (this.state.imagePreviewUrl) {\r\n            this.setState({ show: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { imagePreviewUrl, show } = this.state;\r\n\r\n        return (\r\n            <div className='UploadPhotoContainer'>\r\n                {imagePreviewUrl && show ? this.renderImg() : this._uploadInput()}\r\n                <button className='uploadImgBtn' onClick={() => this._showImg()}>{this.props.buttonText}</button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default UploadPhoto;"]},"metadata":{},"sourceType":"module"}